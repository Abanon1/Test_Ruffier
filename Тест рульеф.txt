first:main.py
from PyQt5.QtCore import Qt , QTime , QTimer 
from PyQt5.QtWidgets import (QApplication,QWidget,
    QPushButton,QVBoxLayout,QHBoxLayout,QLabel, QMessageBox, QRadioButton)
from intr import *
from second_app import TestWin

class MainWin(QWidget):
    def __init__(self):
        super().__init__()
        self.set_appear()
        self.initUI()
        self.connects()
        self.show()

    def set_appear(self):
        self.setWindowTitle(txt_title)
        self.resize(win_width, win_height)
        self.move(win_x,win_y)

    def initUI(self):
        self.hello=QLabel(txt_hello)
        self.description=QLabel(txt_desc)
        self.button=QPushButton(txt_button)
        self.layout=QVBoxLayout()
        self.layout.addWidget(self.hello)
        self.layout.addWidget(self.description)
        self.layout.addWidget(self.button)
        self.setLayout(self.layout)

    def connects(self):
        self.button.clicked.connect(self.next_click)

    def next_click(self):
        self.hide()
        self.tw=TestWin()


app=QApplication([])
main_menu=MainWin()
app.exec()
second.app.py:second
from PyQt5.QtCore import Qt , QTime , QTimer
from PyQt5.QtWidgets import (QApplication,QWidget,
QPushButton,QVBoxLayout,QHBoxLayout, QLineEdit, QLabel, QMessageBox, QRadioButton)
from intr import *
from final_win import TestWin2

class TestWin(QWidget):
    def __init__(self):
        super().__init__()
        self.set_appear()
        self.initUI()
        self.connects()
        self.show()

    def set_appear(self):
        self.setWindowTitle('ВТОРОЕ ОКНО')
        self.resize(win_width, win_height)
        self.move(win_x,win_y)

    def initUI(self):
        self.Label_name=QLabel("Введите Ф.И.О:")
        self.line_l_f_name=QLineEdit('ФИо')

        self.label_age=QLabel('Полных лет:')
        self.line_age=QLineEdit('0')

        self.Label_inst_i=QLabel(instr_1)

        self.Label_inst_l=QLabel(instr_2)
        self.Label_inst_k=QLabel(instr_21)

        self.Label_inst_j = QLabel(instr_3)
        self.Label_inst_o = QLabel(instr_31)
        self.Label_inst_m = QLabel(instr_32)
        self.Label_inst_h = QLabel(instr_33)
    

        
       
        self.btn_test_1=QPushButton('Начать первый тест')
        self.line_bpm_1=QLineEdit('0')
        self.check_res=QPushButton('Начать первый тест')
        self.text_timer=QLabel("00:00:15")
        self.check_res2=QPushButton('начать делать приседания')
        self.layout_v_l=QVBoxLayout()
        self.layout_v_r=QVBoxLayout()
        self.total_layout=QHBoxLayout()
        self.layout_v_l.addWidget(self.Label_name)
        self.layout_v_l.addWidget(self.line_l_f_name)
        self.layout_v_l.addWidget(self.label_age)
        self.layout_v_l.addWidget(self.line_age)
        self.layout_v_l.addWidget(self.Label_inst_i)
        self.layout_v_l.addWidget(self.check_res,alignment = Qt.AlignLeft)
        self.layout_v_l.addWidget(self.line_bpm_1)
        self.layout_v_l.addWidget(self.Label_inst_l)
        self.layout_v_l.addWidget(self.Label_inst_k)
        self.layout_v_l.addWidget(self.check_res2,alignment = Qt.AlignLeft)
        self.layout_v_l.addWidget(self.Label_inst_j)
        self.layout_v_l.addWidget(self.Label_inst_o)
        self.layout_v_l.addWidget(self.Label_inst_m)
        self.layout_v_l.addWidget(self.text_timer)
        self.layout_v_l.addWidget(self.btn_test_1)
        

        self.setLayout(self.layout_v_l)

    def timer1Event(self):
        global time
        time=time.addSecs(-1)
        self.text_timer.setText(time.toString("hh:mm:ss"))
        if time.toString("hh:mm:ss")=="00:00:00":
            self.timer.stop()
            print("TimerStop")

    def timer_test(self):
        global time
        time = QTime(0,1,0)
        self.timer=QTimer()
        self.timer.timeout.connect(self.timer1Event)
        self.timer.start(1000)
    def connects(self):
        self.btn_test_1.clicked.connect(self.timer_test)
        self.check_res.clicked.connect(self.timer_test)
        self.check_res2.clicked.connect(self.timer_test)


    def next_click(self):
        pass
final_win.py(third)
rom PyQt5.QtCore import Qt
from PyQt5.QtWidgets import (QApplication,QWidget,
QPushButton,QVBoxLayout,QHBoxLayout, QLineEdit, QLabel, QMessageBox, QRadioButton)
from intr import *

class TestWin2(QWidget):
    def __init__(self):
        super().__init__()
        self.set_appear()
        self.initUI()
        self.connects()
        self.show()

    def set_appear(self):
        self.setWindowTitle('ФИНАЛЬНЫЙ ОКНО')
        self.resize(win_width, win_height)
        self.move(win_x,win_y)
fourth intr.py
txt_title='Тест Руфье'
win_width=500
win_height=500
win_x=500
win_y=150
instr_1 = 'лягте на спину и замерьте пульс за 15 секун.Нажмите кнопку начать первый тест что бы запустить таймер.'


instr_2 = 'Выполните 30 приседаний за 45 секунд.Для этого нажмите кнопку "Начать делать приседания"'
instr_21 = 'чтобы запустить счетчик приседаний'


instr_3 = 'Лягте на сипну и замерьте пульс сначала за первый 15 секунд минуты, а затем за последние 15 секунд.'
instr_31 = 'Нажмите кнопку "Начать финальный тест",чтобы запустить таймер.'
instr_32 = 'Зеленым обозначены секунды, а течение которых необходимо'
instr_33 = 'проводить измения,черным - минуты без замера пульсаций.Результаты запишите в соотвествующие поля.'



txt_hello='Добро пожаловать!'
txt_desc='Описание очень удивительного теста, а именно теста Руфье'
txt_button='Продолжить'
